ГЛАВА XII.  ПРИМЕРЫ РЕШЕНИЯ ЗАДАЧ ПОВЫШЕННОЙ ТРУДНОСТИ


                               Experimentia est optima rerum magastra!
                                                      Латинская пословица
                               Программированию нельзя научить при помощи
                               выполняемых под команду  массовых  вольных
                               упражнений... В нем нужно упражняться инди-
                               видуально, как в хождении на лыжах и вожде-
                               нии автомобиля.
                                                  Ф.Л.Бауэр,Р.Гнац,У.Хилл


   Преподавание программирования - дело почти безнадежное, а его изучение
- непосильный труд. Преподаватель может всячески возиться  со  студентами,
читать лекции, делать критические замечания, направлять  по  верному пути.
Студент может все тщательно записывать, запоминать, читать, сдавать  заче-
ты, дискутировать хоть до двух ночи.
       ┌──────────────────────────────────────────────────────────┐
       │        Но  все усилия  т щ е т н ы , если студент        │
       │   не будет  п р а к т и к о в а т ь с я  в  написании    │
       │                     п р о г р а м м ,                    │
       │          поскольку навык программирования дается         │
       │              т о л ь к о    п р а к т и к о й.           │
       └──────────────────────────────────────────────────────────┘
   Более того, учиться надо на "настоящих" программах, а не на упрощенных
примерах, вроде тех, которыми изобилует большинство руководств  по языкам
программирования.
   Перечислим те способности, которые жизненно необходимы   в с я к о м у
п р о г р а м м и с т у  [17].
   1. Способность читать и понимать описание поставленной  задачи, улавли-
вать пожелания того, кто ее ставит (что не всегда легко, так как и задачи,
и те, кто их ставит, часто отличаются именно неуловимостью).Учтите третий
закон Чизхолма:"Любую цель люди понимают иначе,чем человек, ее указующий".
   2. Способность четко видеть действительные трудности и отбрасывать все,
не относящееся к делу.
   3. Способность выявить все случаи, где можно применить теорию, самосто-
ятельно решиться на ее применение или обратиться за советом к специалисту.
   4. Способность разбить задачу на ряд обозримых независимых частей и по-
нять взаимосвязи этих частей.
   5. Способность оценивать эффективность  предлагаемых  решений  с точки
зрения затрат на программирование, машинных ресурсов и удовлетворения  по-
требностей пользователя и находить приемлемый компромисс между этими вида-
ми эффективности.
   6. Способность объединять множество частных  решений  воедино, получая
при этом четкое и изящное решение всей задачи.
   7. Способность выражать решения на простом и понятном языке. Естествен-
ный это язык или искусственный - роли не играет, важно лишь,чтобы правиль-
ность решения была ясна и людям, и компьютеру.
   8. И наконец,способность при неудаче подавить самолюбие и поискать дру-
гой подход (или даже другую задачу).
   Способности эти, как видим, столь сложны  и многообразны, что приобрес-
ти их можно  т о л ь к о  на  п р а к т и к е.  Накапливая  опыт, студент
постепенно приобретает  качества, необходимые программисту.
   Академик А.П.Ершов говорил, что "программист должен обладать  способно-
стью первоклассного математика к абстрактному  и  логическому мышлению, в
сочетании с эдисоновским талантом соорудить все, что угодно из нуля и еди-
ницы. Он должен сочетать аккуратность бухгалтера с проницательностью  раз-
ведчика, фантазию автора детективных романов с трезвой практичностью  эко-
номиста. А кроме того, программист должен иметь вкус к коллективной  рабо-
те, понимать интересы пользователя и многое другое".


                            XII.1.  ЗАДАЧИ

   Задачи 12-40 представляют  собою  задачи "со звездочкой" из  школьного 
учебника [11]. Остальные задачи (41-48) - это задачи олимпиадного типа по
информатике. Программы составлены  на  диалоговом  языке программирования
MSX-BASIC. Часть из них использует алгоритмы, приведенные в [41,42,43].

   З а д а ч а 12. Дан целочисленный массив A[N]. Проверьте,есть ли в нем
   ──────────────  элементы, равные нулю. Если есть,найдите номер первого
из них, т.е. наименьшее I, при котором A[I]=0.
   NEW
   Ok
   10 DEFINT A-Z:INPUT N:IF N<=0 THEN CLS:GOTO 10 ELSE DIM A(N)
   20 FOR I=1 TO N:A(I)=INT(2*RND(-TIME)):PRINT A(I);:NEXT:PRINT
   30 FOR I=1 TO N:IF A(I)=0 THEN PRINT"Первый нулевой элемент:";I:END EL
   SE NEXTI:PRINT "Нулевого элемента нет!":END

   З а д а ч а 13.  Дан целочисленный массив A[N].  Проверьте, есть ли  в
   ──────────────   нем отрицательные элементы. Если есть,найдите наиболь-
шее I, при котором A[I]<0.
   NEW
   Ok
   10 INPUT N:DIM A(N):FOR I=1 TO N:A(I)=INT(2*RND(-TIME)-1):PRINT A(I);:
   NEXT I:PRINT
   20 FOR I=1 TO N:IF A(I)<0 THEN B=I:NEXT I ELSE NEXT I
   30 IF B=0 THEN PRINT"Отрицательного элемента в массиве нет" ELSE PRINT
   "Номер последнего отрицательного элемента:";B

   З а д а ч а 14. Проверьте, образуют ли  элементы  двухмерного  массива
   ──────────────  A[N,N] "магический квадрат"  (это значит, что суммы чи-
сел во всех ее вертикалях, всех горизонталях и двух диагоналях одинаковы).
   NEW
   Ok
   10 INPUT "Сторона квадрата";N:DIM A(N,N):FOR I=1 TO N:FOR J=1 TO N:PRI
   NT "Ввести";J;"элемент";I;"строки";:INPUT A(I,J):NEXT J:NEXT I
   20 DIM S(N):FOR I=1 TO N:FOR J=1 TO N:S(I)=S(I)+A(J,I):NEXT J:NEXT I
   30 FOR I=1 TO N-1:IF S(I)<>S(I+1) THEN PRINT "Элементы массива не обра-
   зуют магический квадрат!":END
   40 DIM C(N):FOR J=1 TO N:FOR I=1 TO N:C(J)=C(J)+A(J,I):NEXT I:NEXT J
   50 FOR J=1 TO N-1:IF C(J)<>C(J+1) THEN PRINT "Элементы массива не обра-
   зуют магический квадрат!":END
   60 Q1=0:FOR I=1 TO N:FOR J=1 TO N:IF J=I THEN Q1=Q1+A(I,J):NEXT I ELSE
    NEXT J:NEXT I
   70 IF Q1<>C(1) THEN PRINT "Не является!":END
   80 Q2=0:FOR I=N TO 1 STEP -1:FOR J=N TO 1 STEP -1:IF J=I THEN Q2=Q2+A(
   I,J):NEXT I ELSE NEXT J:NEXT I
   90 IF Q1=Q2 THEN PRINT "Магический квадрат есть!":END

   З а д а ч а 14.1  Постройте "магический квадрат" нечетного порядка.
   ────────────────
   NEW
   Ok
   80 INPUT N:DIM S(N,N)
   90 FOR I=1 TO N:FOR J=1 TO N
   100 B=J-I+(N-1)\2:C=2*J-I
   110 IF B>=N THEN B=B-N ELSE IF B<0 THEN B=B+N
   120 IF C>N THEN C=C-N ELSE IF C<=0 THEN C=C+N
   130 S(I,J)=B*N+C:NEXT J,I
   140 FOR I=1 TO N:FOR J=1 TO N
   150 PRINTUSING"####";S(I,J);:NEXTJ:PRINT:NEXTI

   З а д а ч а 14.2  Постройте "магический" квадрат четного порядка.
   ────────────────
   NEW
   Ok
   10 DEFINT A-Z:GOTO 120
   20 FOR I=P1 TO Q1:H1=NOT H1
   30 IF H1><0 THEN X[I,A1]=NN-A1*N+1+N-IELSEX[I,A1]=A1*N-N+I
   40 NEXT:RETURN '──▶
   50 FOR I=P2 TO Q2:H2=NOT H2
   60 IF H2><0 THEN X[I,A2]=A2*N+1-I ELSE X[I,A2]=NN-A*N+I
   70 NEXT:RETURN '──▶
   80 FOR I=P3 TO Q3:H3=NOT H3
   90 IFH3><0THENX[I,A3]=A3*N+1-I ELSE X[I,A3]=NN-A3*N+N-I+1
   100 NEXT:RETURN '──▶
   110 '∗∗∗∗∗ Основная программа ∗∗∗∗∗
   120 INPUT N:IF N=2 THEN PRINT"Подобный квадрат Вы легко составите само
   стоятельно! Good luck!":END ELSE DIM X[N,N]
   130 N2=N\2:NN=N*N:P=(N=(N\4)*4):Q=P::R=-1
   140 FOR A=1 TO N2-1
   150 P2=1:Q2=A-1:A2=A:H2=R:GOSUB 50:P1=A:Q1=N2-1:A1=A:H1=-1:GOSUB 20
   160 IF Q THEN X[N2,A]=NN-A*N+N2+1 ELSE X[N2,A]=NN-A*N+N2
   170 P1=N2+1:Q1=N:A1=A:H1=NOT Q:GOSUB 20:Q=NOT Q:R=NOT R:NEXT
   180 P1=1:Q1=N2-1:A1=N2:H1=NOT P:GOSUB 20:P1=N2+2:Q1=N:A1=N2:H1=0:GOSUB
    20
   190 P3=1:Q3=N2-1:A3=N2+1:H3=P:GOSUB 80:P3=N2+2:Q3=N:A3=N2+1:H3=-1:GOSU
   B 80
   200 Q=P:R=-1
   210 FOR A=N2+2 TO N
   220 P2=1:Q2=N-A:A2=A:H2=Q:GOSUB 50
   230 X[N-A+1,A]=A*N-A+1
   240 P2=N-A+2:Q2=N2-1:A2=A:H2=-1:GOSUB 50
   250 IF NOT R THEN:::X[N2,A]=NN-A*N+N2:X[N2+1,A]=A*N-N2+1:::ELSE:::FOR 
   B=N2 TO N2+1:X[B,A]=NN-A*N+N-B+1:NEXT B
   260 P2=N2+2:Q2=A-1:A2=A:H2=NOT R:GOSUB 50:P1=A:Q1=N:A1=A:H1=-1:GOSUB20
   270 Q=NOT Q:R=NOT R:NEXT A
   280 FOR A=N2 TO N2+1:FOR B=N2 TO N2+1
   290 IF P<>0 THEN X[B,A]=A*N-N+B ELSE X[B,A]=NN-A*N+N-B+1
   300 NEXT B,A
   310 IF NOT P THEN:::FOR A=N2 TO N2+1:X[N2-1,A]=A*N-N2+2:NEXT:::FOR B=N
   2 TO N2+1:X[B,N2+2]=N*N2-2*N+B:NEXT
   320 FOR F1=1 TO N:FOR F2=1 TO N:PRINTUSING"####";X[F1,F2];:NEXT F2:PRI
   NT :NEXT F1
   330 END
   run
   ? 8
     1  16  41  40  32  17  56  57
    63  10  23  26  39  47  50   2
     3  54  19  38  30  43  11  62
    61  52  45  28  36  21  12   5
    60  13  44  29  37  20  53   4
     6  51  22  35  27  46  14  59
    58  15  42  31  34  18  55   7
     8  49  24  33  25  48   9  64
   Ok

   З а д а ч а 15. Дан целочисленный массив A(N). Подсчитайте  наибольшее
   ──────────────  число одинаковых идущих в нем подряд элементов.
   NEW
   Ok
   10 Z=RND(-TIME):INPUT"Число элементов";N:DIM A(N)
   20 FOR T=1 TO N:
         A(T)=INT(2*RND(1)):PRINT A(T);:
      NEXT T:K=1:F=0:PRINT
   30 FOR I=1 TO N-1
   40    IF A(I)=A(I+1) 
            THEN K=K+1:M=K
            ELSE M=K:K=1
   50    IF M>F THEN F=M
   60 NEXT I:PRINT"Максимальная длина:"F
   run 
   Число элементов? 9
    0  1  0  1  1  0  0  1  0
   Максимальная длина: 2
   Ok

   З а д а ч а 16. Подсчитайте количество  различных чисел, встречающихся
   ──────────────  в целочисленном массиве A(N).Повторяющиеся числа учиты-
вайте один раз.
   NEW
   Ok
   10 DEFINT N,I,Y,L:INPUT N:DIM A(N):X=RND(-TIME)
   20 FOR I=1 TO N:A(I)=INT(20*RND(1)-10):PRINTA(I);:NEXT:?:IF N=1 THEN P
   RINT "Один-одинешенек!":END
   70 FOR Y=1 TO N-1:FOR L=Y+1 TO N
   80 IF A(Y)<A(L) THEN 90 ELSE SWAP A(Y),A(L)
   90 NEXT:NEXT
   95 U=1
   100 FOR I=1 TO N-1
   110 IF A(I)<>A(I+1) THEN U=U+1:NEXT I ELSE NEXT I
   120 PRINT "Количество различных элементов";U

   З а д а ч а 17. Дан целочисленный массив A(N). Постройте  массив B(N),
   ──────────────  который состоит из тех же элементов,что и массив A,но
в котором все отрицательные элементы предшествуют всем неотрицательным.
   NEW
   Ok
   30 INPUT"Число элементов";N
   40 DIM A(N),B(N):Z=RND(-TIME)
   50 INPUT"Чему равен максимальный элемент";F
   60 PRINT "Это - данная таблица:"
   70 FOR I=1 TO N:A(I)=INT(2*F*RND(1)-F):PRINT A(I);:NEXT:?
   80 I=1:J=1:IF I>N THEN 120
   90 FOR K=1 TO 0 STEP 1
   100 IF A(I)<0 THEN B(J)=A(I):J=J+1
   110 I=I+1:K=(I<=N):NEXT K
   120 I=1:IF I>N THEN 170
   130 FOR K=1 TO 0 STEP 1
   140 IF A(I)>=0 THEN B(J)=A(I):J=J+1
   150 I=I+1:K=(I<=N):NEXT K
   160 PRINT "А это - искомая таблица:"
   170 FOR J=1 TO N:PRINT B(J);:NEXT
   run
   Число элементов? 10
   Чему равен максимальный элемент? 9
   Это - данная таблица:
    6 -4  1  6  2  7  7 -9 -5 -5
   А это - искомая таблица:
   -4 -9 -5 -5  6  1  6  2  7  7
   Ok

   З а д а ч а 18. Даны целочисленные массивы  A(N),B(M), причем
   ──────────────             A(1)≤A(2)≤···≤A(N),
                              B(1)≤B(2)≤···≤B(M).
Постройте целочисленный массив C(N+M), содержащий все элементы массивов A
и B, в котором
                          C(1)≤C(2)≤···≤C(N+M) .
   Эта важная задача принципиально должна быть  выполнена за N+M действий.
Возьмем из A и B по первому элементу.Меньший из них занесем в C и заменим
следующим из его же массива. Снова выберем меньший из двух, занесем в C и
т.д. После каждого сравнения в C добавляется  элемент - значит, сравнений
будет меньше, чем N+M. Нужно только позаботиться о том,чтобы программа ра-
ботала верно и при исчерпании одного из массивов.
   NEW
   Ok
   10 INPUT"Введите число элементов в массиве A, затем - в массиве B";N,M:
   FF=RND(-TIME)
   20 DIM A(N),B(M),C(N+M)
   30 FOR K=1 TO N:A(K)=INT(7*RND(1)):NEXT
   40 FOR L=1 TO M:B(L)=INT(9*RND(1)):NEXT
   41 FOR I=1 TO N-1:FOR J=I+1 TO N:IF A(I)>A(J) THEN SWAP A(I),A(J)
   42 NEXT J,I
   43 FOR I=1 TO N:PRINT A(I);:NEXT:PRINT
   45 FOR I=1 TO M-1:FOR J=I+1 TO M:IF B(I)>B(J) THEN SWAP B(I),B(J)
   46 NEXT J,I
   47 FOR I=1 TO M:PRINT B(I);:NEXT:PRINT
   50 P=0:Q=0
   60 FOR I=1 TO N+M
   70 IF P=N THEN Q=Q+1:C(I)=B(Q):NEXT:GOTO 110
   80 IF Q=M THEN P=P+1:C(I)=A(P):NEXT:GOTO 110
   90 IF A(P+1)<B(Q+1) THEN P=P+1:C(I)=A(P) ELSE Q=Q+1:C(I)=B(Q)
   100 NEXT
   110 FOR I=1 TO N+M:PRINT C(I);:NEXT

   З а д а ч а 19. Дан  целочисленный массив  A(N,M).  Найдите количество
   ──────────────  тех чисел I от 1 до N, для которых A(I,J)=0 при некото-
ром J от 1 до 50. Определить количество нулевых элементов в каждой строке.
   NEW
   Ok
   10 INPUT"Введите значения N и M";N,M:IF M>50 THEN 10
   20 DIM A(N,M):G=RND(-TIME)
   30 FOR I=1 TO N:FOR J=1 TO M:A(I,J)=INT(10*RND(1)-5):PRINT A(I,J);:NEX
   T J:PRINT:NEXT I
   40 DIM P(N):FOR I=1 TO N:FOR J=1 TO M
   50 IF A(I,J)=0 THEN C=C+1:NEXT J ELSE NEXT J
   60 P(I)=C:C=0:NEXT I
   70 PRINT"Количество нулевых элементов по строкам:":FOR K=1 TO N:? P(K)
   ;:NEXT
   80 FOR K=1 TO N:IF P(K)<>0 THEN S=S+1:NEXT K ELSE NEXT K
   90 PRINT:PRINT"Количество строк с нулевыми элементами:";S:END


   З а д а ч а 20. Дан целочисленный массив  L(N,M).  Найдите  наименьшее
   ──────────────  число K, обладающее таким свойством:  хотя бы  в одной
строке массива все элементы не превосходят K.
   NEW
   Ok
   20 INPUT "Введите значения N и M";N,M:IF N=1 OR M=1 THEN 20
   30 DIM L(N,M):G=RND(-TIME)
   40 FOR I=1 TO N:FOR J=1 TO M:L(I,J)=INT(10*RND(1)):PRINT L(I,J);:NEXT 
   J:PRINT:NEXT I
   50 FOR I=1 TO N
   60   GOSUB 130
   70 NEXT I
   80 FOR I=1 TO N-1:FOR C=I+1 TO N
   90 IF L(I,1)<L(C,1) THEN NEXT C:B=L(I,1) ELSE NEXT I:B=L(C,1)
   100 PRINT
   110 FOR I=1 TO N
   120 NEXT:PRINT:PRINT"K=";B:END
   130 'Упорядочение элементов в строке
   140 FOR J=1 TO M-1:FOR K=J+1 TO M
   150 IF L(I,J)>L(I,K) THEN GOTO 160 ELSE SWAP L(I,J),L(I,K)
   160 NEXT K:NEXT J:PRINT
   170 FOR J=1 TO M:PRINT L(I,J);:NEXT J
   180 RETURN


                                               Аналогичный случай был ...
                                                      Бравый солдат Швейк


   З а д а ч а 21. Дан двухмерный целочисленный массив A(M,N).  Найти наи-
   ──────────────  большее целое число K, обладающее  таким  свойством: в
любой строке таблицы есть элемент, больший или равный K.
   NEW
   Ok
   7 CLS
   10 INPUT"Введите значения M и N";M,N
   15 IF M<=1 OR N<=1 THEN 7
   20 DIM A(M,N):X=RND(-TIME)
   30 FOR I=1 TO M:FOR J=1 TO N:A(I,J)=INT(21*RND(1)):PRINT A(I,J);:NEXTJ
   :PRINT:NEXT I
   40 DIM B(M)
   50 FOR I=1 TO M:FOR J=1 TO N-1:FOR L=J+1 TO N
   60 IF A(I,J)>A(I,L) THEN NEXT L:B(I)=A(I,J) ELSE NEXT J:B(I)=A(I,L)
   70 NEXT I
   80 FOR I=1 TO M-1:FOR J=I+1 TO M
   90 IF B(I)<=B(J) THEN NEXT J:PRINT"Число,удовлетворяющее условию:"B(I)
    ELSE NEXT I:PRINT"Число,удовлетворяющее условию:"B(J)
   По сути дела условия задач  20 и 21 одинаковы, если, разумеется, масси-
вы A и L совпадают!

   З а д а ч а 22. Постройте алгоритм  разложения  натуральных  чисел  на
   ──────────────  простые множители. В какой форме будут представлены ре-
зультаты работы этого алгоритма.
   NEW
   Ok
   560 INPUT"Натуральное число";S:N=S:W$=""
   570 I=2
   580 IF N/I=FIX(N/I) THEN N=N/I:W$=W$+STR$(I) ELSE I=I+1:GOTO 580
   590 IF I<N THEN 570 ELSE W$=W$+STR$(N)
   600 FOR L=2 TO LEN(W$)
   610 IF MID$(W$,L,1)=CHR$(32) THEN MID$(W$,L,1)="*"
   620 NEXT:PRINT S;"=";W$
   630 END


                              Совершенные числа красивы. Но известно, что
                              красивые вещи редки  и немногочисленны, без-
                              образные же встречаются в изобилии.
                                         Никомах из Герасы (ок. 100 н.э.)


   З а д а ч а 23. Натуральное число называют  с о в е р ш е н н ы м , ес-
   ──────────────  ли оно равно сумме всех своих делителей, не считая его
самого (например, 6=1+2+3 - совершенное число). Напишите  алгоритм, прове-
ряющий, является ли заданное число совершенным.
   NEW
   Ok
   100 INPUT"Введите натуральное N:";N:IF N=1 THEN 140
   120 FOR J=1 TO N-1
   130 IF N/J=FIX(N/J) THEN K=K+J:NEXT J:ELSE NEXT J
   140 IF K=N THEN PRINT N"-совершенное число" ELSE PRINT N"не является с
   овершенным"

   З а д а ч а 23∗. Написать программу, находящую  все  совершенные числа,
   ───────────────  принадлежащие отрезку [1,N].
   NEW
   Ok
   10 INPUT"Введите натуральное N:";N
   15 PRINT"Совершенные числа на промежутке от 1 до"N":"
   20 FOR I=2 TO N:FOR J=1 TO I-1
   30 IF I/J=FIX(I/J) THEN K=K+J:NEXTJ:ELSE NEXTJ
   40 IF K=I THEN PRINT I:K=0:L=1:NEXT I ELSE K=0:NEXTI
   50 IF L<1 THEN PRINT"Таких чисел нет"
   run
   Введите натуральное N? 1000
   Совершенные числа на промежутке от 1 до 1000:
    6
    28
    496
   Ok

   З а д а ч а 24. Напечатайте в порядке возрастания первые 1000 чисел,ко-
   ──────────────  торые не имеют простых делителей,кроме 2,3 и 5.(Начало
списка: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15,...).
   NEW
   Ok
   20 CLEAR 1000:I=2:N=1:PRINT 1;SPC(2);"1=1"
   30 IF NOT I<=1000 THEN 90
   40 FOR K=1 TO 0 STEP 1:GOSUB 100
   50 FOR T=1 TO LEN(V$) STEP 2
   60 IF (MID$(V$,T,2)="1*" OR MID$(V$,T,2)="2*") OR (MID$(V$,T,2)="3*" O
   R MID$(V$,T,2)="5*") THEN H$="good" ELSE H$="not":T=LEN(V$)+1
   70 NEXT T:IF H$="good" THEN PRINT I;SPC(2);MID$(STR$(N),2);"=";LEFT$(V
   $,LEN(V$)-1):I=I+1
   80 N=N+1:K=(I<=1000):NEXT K
   90 PRINT :PRINT "Выбор закончен":END
   100 V$="":P=2:W=N
   110 D=W/P:IF D=INT(D) THEN V$=V$+MID$(STR$(P),2)+"*":W=D:GOTO 110
   120 P=P+1:IF W>=P THEN 110
   130 RETURN
   run
    1   1=1
    2   2=2
       ···
    85   972=2*2*3*3*3*3*3
    86   1000=2*2*2*5*5*5
   Ok

   З а д а ч а 25. Придумайте способ нахождения самой легкой и самой тяже-
   ──────────────  лой из 100 монет различной массы,  если можно  сделать
не более 150 взвешиваний на чашечных весах без гирь.  (На каждую чашку ве-
сов помещается по одной монете; весы показывают, какая из них тяжелее.)
   NEW
   Ok
   5  'Автор программы: Поляков Сергей (9 класс), 02.01.90
   10 WIDTH80:CLS:INPUT"Введите число монет(продолжение сообщений по нажа
   тию клавиши 'Пробел')";N:IF N/2=FIX(N/2) THEN DIM A(N):X=RND(-TIME) EL
   SE CLS:RUN 10
   20       PRINT "В Вашем кошельке хранятся следующие монеты:"
   30       PRINT"────────────────────────────────────────────────"
   40   FOR I=1 TO N:A(I)=INT(100*RND(1)+1):PRINT A(I);:NEXT:R1=A(1)
   50 PRINT:PRINT"────────────────────────────────────────────────":H$=IN
   PUT$(1)
   60   FOR I=1 TO N-1 STEP 2
   70       IF A(I)<A(I+1) THEN R=A(I):D=A(I+1) ELSE R=A(I+1):D=A(I)
   80       G=G+1:PRINT"  Итак,           "G"-ОЕ ВЗВEШИВАНИЕ":PRINT
   90       PRINT" Вес "I"-ой монеты   -"A(I)" граммов     "I+1"-ой монет
   ы-   "A(I+1)" граммов ":PRINT
   100      PRINT" Самая меньшая по весу из предыдущих монет -"R1" граммо
   в":PRINT
   110      G=G+1:IF R<R1 THEN R1=R
   120      PRINT" Меньшая из 2 только что взятых монет-"R"граммов; после
    сравнения этих монет ОСТАЕТСЯ монета весом "R1"граммов":PRINT
   125 PRINT "        ("G"-ОЕ ВЗВЕШИВАНИЕ)":PRINT
   130      PRINT" Самая большая по весу из предыдущих монет -"D1" граммо
   в":PRINT
   140      G=G+1:IF D>D1 THEN D1=D
   150      PRINT" Большая из 2 только что взятых монет-"D"граммов; после
    сравнения этих монет ОСТАЕТСЯ монета весом "D1" граммов":PRINT
   155 PRINT "        ("G"-OE ВЗВЕШИВАНИЕ)":PRINT
   160                    H$=INPUT$(1):GOSUB 200
   170  C=C+3:NEXT I
   180        PRINT:PRINT"После долгих стараний: ("C" взвешиваний) мы наш
   ли,что наибольший вес:":PRINT D1"граммов":PRINT
   190        PRINT"  Mинимальный вес:"R1"граммов":END
   200 LOCATE 0,4:FOR F=1 TO 17:FOR J=1 TO 80:PRINT" ";:NEXT:NEXT:LOCATE 
   0,4:RETURN

   З а д а ч а 26. Имеется 1000 монет, из которых одна фальшивая (она лег-
   ──────────────  че других). Докажите, что нельзя придумать способ,  га-
рантирующий нахождение фальшивой монеты за 6 взвешиваний  на чашечных  ве-
сах без гирь.  Придумайте способ, гарантирующий нахождение фальшивой моне-
ты за 7 взвешиваний.
   NEW
   Ok
   20 B=1000:D=1:Q=1:PRINT "Мы имеем";B;"монет":GOTO 110
   30 I=I+1:PRINT I;"ВЗВЕШИВАНИЕ."
   40 A=INT(B/3):PRINT "Разделим все оставшиеся монеты на 4 кучки по";A;"
   ,";A;",";A;"и";B-3*A-Q+D;"монет."
   50 PRINT "Взвесим 2 кучки по";A;"монет."
   60 PRINT "Если одна из них легче, то берем эту кучку монет и еще";B-3*
   A-Q+D;"монеты."
   70 PRINT "Остальные монеты не являются фальшивыми."
   80 PRINT "Для получения дальнейшей информации нажмите любую клавишу."
   90 IF NOT B/3=A THEN Q=Q-1
   100 B=A:P$=INPUT$(1):RETURN
   110 FOR T=1 TO 6:GOSUB 30:NEXT
   120 B=3:D=0:Q=0:GOSUB 30
   130 PRINT "Итак, Вы нашли фальшивую монету."

   З а д а ч а 27. Среди 2·N+1 различных по массе монет нужно найти  сред-
   ──────────────  нюю (т.е. такую, которая тяжелее N монет и легче N дру-
гих монет). Придумайте способ, позволяющий  сделать  это  не более чем за
100·N взвешиваний на чашечных весах без гирь.
   5 'Автор программы: Шарковский Игорь (9 класс), 02.01.90
   10 KEY OFF:CLS:COLOR 15,4
   20 INPUT"Количество монет (нечетное число, не большее 13)";N
   30 IF N/2=FIX(N/2) OR N>13 THEN CLS :RUN20 ELSE X=RND(-TIME):DIM A(N)
   40 PRINT "В вашем кошельке лежат монеты:"
   50 FOR I=1 TO N:PRINT "┌────┐";:NEXT:PRINT:
   60 FOR I=1 TO N
   70 A(I)=INT(20*(RND(1))+10):PRINT "│"A(I)"│";
   80 NEXT :PRINT:FOR I=1 TO N:PRINT "└────┘";:NEXT:FOR I=1 TO 1000:NEXT:
   PRINT:
   90 PRINT "Приступим к упорядочению монет по возрастанию ":FOR I=1 TO 1
   000:NEXT
   100 PRINT :IF N=1 THEN PRINT "Всего-то?":END
   110 FOR I=1 TO N-1:FOR J=I+1 TO N
   120  IF A(I)>=A(J) THEN SWAP A(I),A(J):K=K+1:NEXTJ:NEXT I ELSE K=K+1:N
   EXT J:NEXT I
   130 PRINT "После упорядочения монеты в Вашем кошельке расположились та
   к:"
   140 FOR I=1 TO N:PRINT"┌────┐";:NEXT:FOR I=1 TO 1000:NEXT:PRINT
   150 FOR I=1 TO N :PRINT "│"A(I)"│";:NEXT
   160 PRINT:FOR I=1 TO N:PRINT"└────┘";:NEXT:FOR I=1 TO 1000:NEXT:FOR I=
   1 TO 4:PRINT:NEXT
   170 PRINT "Теперь (наконец-то) приступим к нахождению средней из них (
   по массе)":FOR I=1 TO 1000:NEXT:PRINT
   190 PRINT "Средняя по массе монета в Вашем кошельке -"A(FIX(N/2)+1)"г"
   :PRINT"Число взвешиваний -"K :FOR I=1 TO 1000:NEXT
   220 LOCATE 4+FIX(N/2-1)*6,11:PRINT "   ▁▄▇▄▁"
   230 LOCATE 4+FIX(N/2-1)*6,12:PRINT "    "
   235 LOCATE 4+FIX(N/2-1)*6,13:PRINT "  ВОТ ОНА"
   240 LOCATE 0,24

   З а д а ч а 28. Последовательность A(1),A(2),A(3),... определяется так
   ──────────────      А(1)=1, A(2N)=A(N), A(2N+1)=A(N)+A(N+1).
Напишите программу, вычисляющую A(N) по известному N.
   NEW
   Ok
   490 INPUT"Введите N";N:DIM A(N)
   500 A(1)=1:PRINT A(1);:FOR I=2 TO N
   510 IF I/2=INT(I/2) THEN A(I)=A(I/2)ELSEA(I)=A(INT(I/2))+A(INT(I/2)+1)
   520 PRINT A(I);:NEXT:PRINT:PRINT "An=";A(N)
   530 END


                                Каждая истинная работа имеет свою красоту.
                                                                Н.К.Рерих


   З а д а ч а 29. Дан целочисленный массив A(N).Найдите наименьшее число
   ──────────────  К элементов, которые нужно "выкинуть" из последователь-
ности A(1),A(2),...,A(N), чтобы осталась возрастающая последовательность.
   10 DEFINT Q,K,I,J,N,D:INPUT "Укажите количество элементов";N:DIM A(N),
   Q(N),B(N):X=RND(-TIME)
   15 PRINT"Исходная последовательность:"
   20 FOR I=1 TO N:A(I)=INT(9*RND(1)):PRINT A(I);:NEXTI
   30 FOR I=1 TO N:Q(I)=N-1:NEXT I
   40 FOR I=1 TO N-1:FOR J=I+1 TO N
   50 IF A(I)<A(J) THEN IF Q(I)<Q(J)+1 THEN Q(J)=Q(I)-1
   55 NEXT J,I
   60 K=Q(1):FOR I=2 TO N
   80 IF K>Q(I) THEN K=Q(I)
   90 NEXT I:D=K
   100 PRINT:PRINT"Нужно выбросить:";K;"элементa"
   120 FOR I=N TO 1 STEP(-1)
   130 IF Q(I)=K THEN B(K)=A(I):K=K+1:NEXT I ELSE NEXTI
   135 PRINT"Одна из самых длинных возрастающих подпоследовательностей:";
   140 FOR J=N-1 TO D STEP (-1):PRINT B(J);:NEXTJ
   run
   Укажите количество элементов? 10
   Исходная последовательность:
   ·7··4··2··4··7··8··2··6··8··3
   Нужно выбросить: 6 элемента
   Одна из самых длинных возрастающих подпоследовательностей:
   ·2··4··6··8
   Ok
   В этой задаче программными строками 10-20 описываем массив A и заполня-
ем его псевдослучайными числами; это делается для  формирования  тестовых
примеров без утомительного набора их на клавиатуре. Строки с 30 по 100 по-
зволяют с помощью дополнительного массива Q найти наименьшее число  K эле-
ментов, которые нужно "выкинуть" из массива, чтобы  осталась возрастающая
подпоследовательность. И, наконец, в строках 120-140 происходит выделение
этой максимальной по длине подпоследовательности. 

   З а д а ч а 30. Дано три целочисленных  массива   A(N), B(N), C(N). Из-
   ──────────────  вестно, что существуют  целые  числа, встречающиеся во
всех трех таблицах. Найдите одно из таких чисел.
   NEW
   Ok
   20 INPUT"Введите размер массивов";N
   30 Z=RND(-TIME)
   40 PRINT "Первый массив"
   50 DIM S(N)
   60 FOR I=1 TO N:X=INT(N*RND(1)):S(I)=X:PRINT S(I);:NEXT:PRINT
   90 PRINT"Второй массив"
   100 DIM K(N)
   110 FOR I=1 TO N:X=INT(N*RND(1)):K(I)=X:PRINTK(I);:NEXT:PRINT
   130 PRINT"Третий массив"
   140 DIM P(N):FOR I=1 TO N:X=INT(N*RND(1)):P(I)=X:PRINTP(I);
   160 NEXT:PRINT
   170 DIM U(N,3):Y$="а его нет!"
   180 FOR I=1 TO N:M=1:U(I,M)=S(I):NEXT
   210 FOR I=1 TO N:M=2:U(I,M)=K(I):NEXT
   240 FOR I=1 TO N:M=3:U(I,M)=P(I):NEXT
   270 FOR I=1 TO 3:FOR J=1 TO N:FOR R=1 TO 3:FOR K=1 TO N
   310 IF U(J,I)=U(K,R) THEN NEXT R:Y$=STR$(U(J,I)) ELSE NEXT K,J,I
   320 PRINT
   330 PRINT"Общий элемент: ";Y$:END

   З а д а ч а 30∗. Найдем теперь все числа, обладающие свойством, описан-
   ───────────────  ным в задаче 30.
   NEW
   Ok
   10 INPUT"Сколько чисел в каждой таблице";N:DIM A1(N),A2(N),A3(N)
   20 INPUT"Чему равен максимальный элемент";F
   30 FOR I=1 TO N:A1(I)=INT(2*F*RND(1)-F):PRINT A1(I);:NEXT:PRINT:PRINT
   40 FOR I=1 TO N:A2(I)=INT(2*F*RND(1)-F):PRINT A2(I);:NEXT:PRINT:PRINT
   50 FOR I=1 TO N:A3(I)=INT(2*F*RND(1)-F):PRINT A3(I);:NEXT:PRINT:PRINT
   60 PRINT "А вот те числа, которые встречаются в трех таблицах сразу:"
   70 FOR I=1 TO N:FOR J=1 TO N:FOR K=1 TO N
   80 IF A1(I)=A2(J) AND A1(I)=A3(K) THEN PRINT A1(I);:NEXT I ELSE NEXT K
   ,J,I
   90 PRINT :PRINT"Увы, но все числа, встречающиеся в трех таблицах сразу
   , уже выведены на экран."

   З а д а ч а 31. Даны два слова X$ и Y$. Проверить,можно ли из символов,
   ──────────────  входящих в слово X$, составить слово Y$. Символы можно
переставлять, но каждый символ можно использовать не более одного раза!
   NEW
   Ok
   10 INPUT X$,Y$
   15 IF X$="" OR Y$="" THEN PRINT "Нет":GOTO 10
   20 FOR I=1 TO LEN(Y$):FOR J=1 TO LEN(X$)
   30 IF MID$(Y$,I,1)=MID$(X$,J,1) THEN X$=LEFT$(X$,J-1)+RIGHT$(X$,LEN(X$
   )-J):A$="Да":NEXT I ELSE A$="Нет":NEXT J
   50 PRINT A$:END
   run              А затем... Ok            Подумайте,почему
   ? молоко,комоло             print LEN(x$)     x$="" ?
   Да                           0
   Ok                          Ok

   З а д а ч а 32. Составьте алгоритм, находящий по целым величинам  A, B
   ──────────────  и С такие целые числа X и Y, что  A·X+B·Y=C  (если  та-
кие X и Y есть).
   NEW
   Ok
   30 PRINT "Ax+By=C (Диофантовы уравнения)"
   40 INPUT"Чему равны A,B,C";A,B,C
   50 A1=A:B1=B:C1=C
   60 'Нам нужно найти число M такое, которое в 5 раз больше числа цифр в
    максимальном по модулю из чисел  A, B, C (строки 60-80)
   70 CJ=ABS(A):IF ABS(B)>CJ THEN CJ=ABS(B)
   80 IF ABS(C)>CJ THEN CJ=ABS(C)
   90 CJ$=MID$(STR$(CJ),2):M=5*LEN(CJ$)
   100 DIM Q(M)
   110 N=0:I=0:D=ABS(A):S=ABS(A):R=ABS(B)
   120 I=I+1:IF NOT R<>0 THEN 160
   130 FOR W=1 TO 0 STEP 1             '∗∗∗∗ WHILE ∗∗∗∗
   140 N=I:Q[I]=FIX(S/R):D=R:R=S-R*Q[I]:S=D
   150 I=I+1:W=R<>0:NEXT W             '∗∗∗∗ WEND ∗∗∗∗
   160 IF D=0 THEN:::IF C=0 THEN PRINT "Неопределенность":END ELSE PRINT"
   Нет решения":END:::ELSE
   170 IF FIX(C/D)*D<>C THEN PRINT "Нет решения":END
   180 A=A/D:B=B/D:C=C/D 'Уравнение приведем к виду, когда A и B взаимно 
   простые.
   190 IF N=0 THEN V=0:U=1 ELSE V=1:U=0:::FOR I=N-1 TO 1 STEP -1:S=V:V=U
   -V*Q[I]:U=S:NEXT I
   200 X=C*U*SGN(A):Y=C*V*SGN(B):C=FIX(X/B):X=X-C*B:Y=Y+C*A'Частные решен
   ия
   210 PRINT "Получено частное решение":PRINT "уравнения: (";STR$(A1);")*
   x+(";STR$(B1);")*y=";C1
   220 PRINT "X0=";STR$(X);SPC(2);"Y0=";STR$(Y)
   230 PRINT "Общее решение:":PRINT "Xi=";STR$(X);"+i*(";STR$(B1);") и Yi
   =";STR$(Y);"-i*(";STR$(A1);"),"
   240 PRINT "где i- целое число."
   250 '    Таблица тестовых примеров
   260 '┌────┬────┬─────┬──────┬────────┐
   270 '│  A │  B │  C  │   X  │    Y   │
   280 '│────│────│─────│──────│────────│
   290 '│1000│ 23 │ 1046│ -22  │  1002  │
   300 '│  0 │  0 │  0  │Неопределенность
   310 '│ 57 │-103│47009│  73  │  -416  │
   320 '│ 10 │ 12 │ 578 │  -1  │   49   │
   330 '│ 10 │ 12 │ 97  │  Нет решения  │
   340 '└───────────────────────────────┘    

